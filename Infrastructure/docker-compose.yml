version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: store-postgres
    environment:
      - POSTGRES_DB=store_db
      - POSTGRES_USER=store_user
      - POSTGRES_PASSWORD=StrongPassword123!
      - POSTGRES_MULTIPLE_DATABASES=store_identity_db,store_product_db,store_cart_db,store_order_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-databases.sh:/docker-entrypoint-initdb.d/init-databases.sh
    networks:
      - store-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: store-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - store-network

  # Identity Service
  identity-service:
    build:
      context: ../Services/IdentityService
      dockerfile: Dockerfile
    container_name: store-identity-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=store_identity_db;Username=store_user;Password=StrongPassword123!;
      - Redis__ConnectionString=redis:6379
    ports:
      - "5001:80"
    depends_on:
      - postgres
      - redis
    networks:
      - store-network

  # Product Service
  product-service:
    build:
      context: ../Services/ProductService
      dockerfile: Dockerfile
    container_name: store-product-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=store_product_db;Username=store_user;Password=StrongPassword123!;
      - Redis__ConnectionString=redis:6379
      - IdentityService__BaseUrl=http://identity-service
    ports:
      - "5002:80"
    depends_on:
      - postgres
      - redis
      - identity-service
    networks:
      - store-network

  # Cart Service
  cart-service:
    build:
      context: ../Services/CartService
      dockerfile: Dockerfile
    container_name: store-cart-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=store_cart_db;Username=store_user;Password=StrongPassword123!;
      - Redis__ConnectionString=redis:6379
      - IdentityService__BaseUrl=http://identity-service
      - ProductService__BaseUrl=http://product-service
    ports:
      - "5003:80"
    depends_on:
      - postgres
      - redis
      - identity-service
      - product-service
    networks:
      - store-network

  # Order Service
  order-service:
    build:
      context: ../Services/OrderService
      dockerfile: Dockerfile
    container_name: store-order-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=store_order_db;Username=store_user;Password=StrongPassword123!;
      - Redis__ConnectionString=redis:6379
      - IdentityService__BaseUrl=http://identity-service
      - ProductService__BaseUrl=http://product-service
      - CartService__BaseUrl=http://cart-service
    ports:
      - "5004:80"
    depends_on:
      - postgres
      - redis
      - identity-service
      - product-service
      - cart-service
    networks:
      - store-network

  # API Gateway Service
  gateway-service:
    build:
      context: ../Gateway/APIGateway
      dockerfile: Dockerfile
    container_name: store-gateway-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - Services__IdentityService=http://identity-service
      - Services__ProductService=http://product-service
      - Services__CartService=http://cart-service
      - Services__OrderService=http://order-service
    ports:
      - "5000:80"
    depends_on:
      - identity-service
      - product-service
      - cart-service
      - order-service
    networks:
      - store-network

  # Frontend UI
  frontend:
    build:
      context: ../UI/store-app.UI
      dockerfile: Dockerfile
    container_name: store-frontend
    environment:
      - VITE_API_BASE_URL=http://localhost:5000
    ports:
      - "3000:80"
    depends_on:
      - gateway-service
    networks:
      - store-network

volumes:
  postgres_data:
  redis_data:

networks:
  store-network:
    driver: bridge
