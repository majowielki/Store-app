namespace Store.Shared.MessageBus;

public interface IMessageBus
{
    Task PublishAsync<T>(T message, string routingKey = "", CancellationToken cancellationToken = default) where T : IntegrationEvent;
    Task SubscribeAsync<T>(Func<T, Task> handler, string queueName = "", CancellationToken cancellationToken = default) where T : IntegrationEvent;
    void Dispose();
}

public interface IMessageBusConnection
{
    bool IsConnected { get; }
    bool TryConnect();
    IDisposable CreateModel();
    void Dispose();
}