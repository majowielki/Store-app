using Store.ProductService.DTOs.Requests;
using Store.ProductService.DTOs.Responses;
using Store.Shared.Models;

namespace Store.ProductService.Services;

public interface IProductService
{
    Task<ProductResponse?> GetProductByIdAsync(int id);
    Task<ProductListResponse> GetProductsAsync(ProductQueryRequest request);
    Task<ProductResponse> CreateProductAsync(CreateProductRequest request);
    Task<ProductResponse?> UpdateProductAsync(int id, UpdateProductRequest request);
    Task<bool> DeleteProductAsync(int id);
    Task<bool> ProductExistsAsync(int id);
    Task<IEnumerable<ProductResponse>> GetFeaturedProductsAsync(int count = 10);
    Task<IEnumerable<ProductResponse>> GetProductsByCategoryAsync(Store.Shared.Utility.Category category, int page = 1, int pageSize = 20);
    Task<IEnumerable<ProductResponse>> GetProductsByCompanyAsync(Store.Shared.Utility.Company company, int page = 1, int pageSize = 20);
    Task<IEnumerable<ProductResponse>> SearchProductsAsync(string searchTerm, int page = 1, int pageSize = 20);
}
