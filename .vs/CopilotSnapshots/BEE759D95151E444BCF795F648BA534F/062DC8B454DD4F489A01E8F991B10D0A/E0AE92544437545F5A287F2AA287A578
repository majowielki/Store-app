using System.ComponentModel.DataAnnotations;
using Store.Shared.Utility;

namespace Store.Shared.Models;

public class Order
{
    public int Id { get; set; }
    
    [Required]
    public string UserId { get; set; } = string.Empty;
    
    [Required]
    public string UserEmail { get; set; } = string.Empty;
    
    [Required]
    [StringLength(500)]
    public string ShippingAddress { get; set; } = string.Empty;
    
    [Required]
    [StringLength(100)]
    public string CustomerName { get; set; } = string.Empty;
    
    [StringLength(20)]
    public string? PhoneNumber { get; set; }
    
    public List<OrderItem> OrderItems { get; set; } = new();
    
    public int TotalItems => OrderItems?.Sum(item => item.Quantity) ?? 0;
    
    public decimal SubTotal => OrderItems?.Sum(item => item.Price * item.Quantity) ?? 0;
    
    public decimal ShippingCost { get; set; }
    
    public decimal Tax { get; set; }
    
    public decimal OrderTotal => SubTotal + ShippingCost + Tax;
    
    public OrderStatus Status { get; set; } = OrderStatus.Pending;
    
    public PaymentStatus PaymentStatus { get; set; } = PaymentStatus.Pending;
    
    [StringLength(100)]
    public string? PaymentIntentId { get; set; }
    
    [StringLength(100)]
    public string? TrackingNumber { get; set; }
    
    public DateTime CreatedAt { get; set; } = DateTime.UtcNow;
    
    public DateTime UpdatedAt { get; set; } = DateTime.UtcNow;
    
    public DateTime? ShippedAt { get; set; }
    
    public DateTime? DeliveredAt { get; set; }
    
    [StringLength(1000)]
    public string? Notes { get; set; }
}

public class OrderItem
{
    public int Id { get; set; }
    
    public int OrderId { get; set; }
    public Order Order { get; set; } = null!;
    
    [Required]
    public int ProductId { get; set; }
    
    [Required]
    [StringLength(200)]
    public string ProductTitle { get; set; } = string.Empty;
    
    [Required]
    public string ProductImage { get; set; } = string.Empty;
    
    [Range(0.01, 999999.99)]
    public decimal Price { get; set; }
    
    [Range(1, 999)]
    public int Quantity { get; set; } = 1;
    
    [Required]
    [StringLength(50)]
    public string Color { get; set; } = string.Empty;
    
    [Required]
    [StringLength(100)]
    public string Company { get; set; } = string.Empty;
    
    public decimal LineTotal => Price * Quantity;
    
    // Navigation property to Product (optional, for reference)
    public Product? Product { get; set; }
}

